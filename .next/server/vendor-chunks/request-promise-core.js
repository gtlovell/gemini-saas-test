"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/request-promise-core";
exports.ids = ["vendor-chunks/request-promise-core"];
exports.modules = {

/***/ "(rsc)/./node_modules/request-promise-core/configure/request2.js":
/*!*****************************************************************!*\
  !*** ./node_modules/request-promise-core/configure/request2.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar core = __webpack_require__(/*! ../ */ \"(rsc)/./node_modules/request-promise-core/lib/plumbing.js\"),\n    isArray = __webpack_require__(/*! lodash/isArray */ \"(rsc)/./node_modules/lodash/isArray.js\"),\n    isFunction = __webpack_require__(/*! lodash/isFunction */ \"(rsc)/./node_modules/lodash/isFunction.js\"),\n    isObjectLike = __webpack_require__(/*! lodash/isObjectLike */ \"(rsc)/./node_modules/lodash/isObjectLike.js\");\n\n\nmodule.exports = function (options) {\n\n    var errorText = 'Please verify options'; // For better minification because this string is repeating\n\n    if (!isObjectLike(options)) {\n        throw new TypeError(errorText);\n    }\n\n    if (!isFunction(options.request)) {\n        throw new TypeError(errorText + '.request');\n    }\n\n    if (!isArray(options.expose) || options.expose.length === 0) {\n        throw new TypeError(errorText + '.expose');\n    }\n\n\n    var plumbing = core({\n        PromiseImpl: options.PromiseImpl,\n        constructorMixin: options.constructorMixin\n    });\n\n\n    // Intercepting Request's init method\n\n    var originalInit = options.request.Request.prototype.init;\n\n    options.request.Request.prototype.init = function RP$initInterceptor(requestOptions) {\n\n        // Init may be called again - currently in case of redirects\n        if (isObjectLike(requestOptions) && !this._callback && !this._rp_promise) {\n\n            plumbing.init.call(this, requestOptions);\n\n        }\n\n        return originalInit.apply(this, arguments);\n\n    };\n\n\n    // Exposing the Promise capabilities\n\n    var thenExposed = false;\n    for ( var i = 0; i < options.expose.length; i+=1 ) {\n\n        var method = options.expose[i];\n\n        plumbing[ method === 'promise' ? 'exposePromise' : 'exposePromiseMethod' ](\n            options.request.Request.prototype,\n            null,\n            '_rp_promise',\n            method\n        );\n\n        if (method === 'then') {\n            thenExposed = true;\n        }\n\n    }\n\n    if (!thenExposed) {\n        throw new Error('Please expose \"then\"');\n    }\n\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVxdWVzdC1wcm9taXNlLWNvcmUvY29uZmlndXJlL3JlcXVlc3QyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFdBQVcsbUJBQU8sQ0FBQyxzRUFBSztBQUN4QixjQUFjLG1CQUFPLENBQUMsOERBQWdCO0FBQ3RDLGlCQUFpQixtQkFBTyxDQUFDLG9FQUFtQjtBQUM1QyxtQkFBbUIsbUJBQU8sQ0FBQyx3RUFBcUI7OztBQUdoRDs7QUFFQSw2Q0FBNkM7O0FBRTdDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTDs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOzs7QUFHQTs7QUFFQTtBQUNBLHFCQUFxQiwyQkFBMkI7O0FBRWhEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyIvVXNlcnMvZ2xvdmVsbC9kZXYvZ2VtaW5pLXNhYXMtdGVzdC9ub2RlX21vZHVsZXMvcmVxdWVzdC1wcm9taXNlLWNvcmUvY29uZmlndXJlL3JlcXVlc3QyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGNvcmUgPSByZXF1aXJlKCcuLi8nKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnbG9kYXNoL2lzQXJyYXknKSxcbiAgICBpc0Z1bmN0aW9uID0gcmVxdWlyZSgnbG9kYXNoL2lzRnVuY3Rpb24nKSxcbiAgICBpc09iamVjdExpa2UgPSByZXF1aXJlKCdsb2Rhc2gvaXNPYmplY3RMaWtlJyk7XG5cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuXG4gICAgdmFyIGVycm9yVGV4dCA9ICdQbGVhc2UgdmVyaWZ5IG9wdGlvbnMnOyAvLyBGb3IgYmV0dGVyIG1pbmlmaWNhdGlvbiBiZWNhdXNlIHRoaXMgc3RyaW5nIGlzIHJlcGVhdGluZ1xuXG4gICAgaWYgKCFpc09iamVjdExpa2Uob3B0aW9ucykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihlcnJvclRleHQpO1xuICAgIH1cblxuICAgIGlmICghaXNGdW5jdGlvbihvcHRpb25zLnJlcXVlc3QpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoZXJyb3JUZXh0ICsgJy5yZXF1ZXN0Jyk7XG4gICAgfVxuXG4gICAgaWYgKCFpc0FycmF5KG9wdGlvbnMuZXhwb3NlKSB8fCBvcHRpb25zLmV4cG9zZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihlcnJvclRleHQgKyAnLmV4cG9zZScpO1xuICAgIH1cblxuXG4gICAgdmFyIHBsdW1iaW5nID0gY29yZSh7XG4gICAgICAgIFByb21pc2VJbXBsOiBvcHRpb25zLlByb21pc2VJbXBsLFxuICAgICAgICBjb25zdHJ1Y3Rvck1peGluOiBvcHRpb25zLmNvbnN0cnVjdG9yTWl4aW5cbiAgICB9KTtcblxuXG4gICAgLy8gSW50ZXJjZXB0aW5nIFJlcXVlc3QncyBpbml0IG1ldGhvZFxuXG4gICAgdmFyIG9yaWdpbmFsSW5pdCA9IG9wdGlvbnMucmVxdWVzdC5SZXF1ZXN0LnByb3RvdHlwZS5pbml0O1xuXG4gICAgb3B0aW9ucy5yZXF1ZXN0LlJlcXVlc3QucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiBSUCRpbml0SW50ZXJjZXB0b3IocmVxdWVzdE9wdGlvbnMpIHtcblxuICAgICAgICAvLyBJbml0IG1heSBiZSBjYWxsZWQgYWdhaW4gLSBjdXJyZW50bHkgaW4gY2FzZSBvZiByZWRpcmVjdHNcbiAgICAgICAgaWYgKGlzT2JqZWN0TGlrZShyZXF1ZXN0T3B0aW9ucykgJiYgIXRoaXMuX2NhbGxiYWNrICYmICF0aGlzLl9ycF9wcm9taXNlKSB7XG5cbiAgICAgICAgICAgIHBsdW1iaW5nLmluaXQuY2FsbCh0aGlzLCByZXF1ZXN0T3B0aW9ucyk7XG5cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBvcmlnaW5hbEluaXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblxuICAgIH07XG5cblxuICAgIC8vIEV4cG9zaW5nIHRoZSBQcm9taXNlIGNhcGFiaWxpdGllc1xuXG4gICAgdmFyIHRoZW5FeHBvc2VkID0gZmFsc2U7XG4gICAgZm9yICggdmFyIGkgPSAwOyBpIDwgb3B0aW9ucy5leHBvc2UubGVuZ3RoOyBpKz0xICkge1xuXG4gICAgICAgIHZhciBtZXRob2QgPSBvcHRpb25zLmV4cG9zZVtpXTtcblxuICAgICAgICBwbHVtYmluZ1sgbWV0aG9kID09PSAncHJvbWlzZScgPyAnZXhwb3NlUHJvbWlzZScgOiAnZXhwb3NlUHJvbWlzZU1ldGhvZCcgXShcbiAgICAgICAgICAgIG9wdGlvbnMucmVxdWVzdC5SZXF1ZXN0LnByb3RvdHlwZSxcbiAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAnX3JwX3Byb21pc2UnLFxuICAgICAgICAgICAgbWV0aG9kXG4gICAgICAgICk7XG5cbiAgICAgICAgaWYgKG1ldGhvZCA9PT0gJ3RoZW4nKSB7XG4gICAgICAgICAgICB0aGVuRXhwb3NlZCA9IHRydWU7XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIGlmICghdGhlbkV4cG9zZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQbGVhc2UgZXhwb3NlIFwidGhlblwiJyk7XG4gICAgfVxuXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/request-promise-core/configure/request2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/request-promise-core/lib/errors.js":
/*!*********************************************************!*\
  !*** ./node_modules/request-promise-core/lib/errors.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("\n\n\nfunction RequestError(cause, options, response) {\n\n    this.name = 'RequestError';\n    this.message = String(cause);\n    this.cause = cause;\n    this.error = cause; // legacy attribute\n    this.options = options;\n    this.response = response;\n\n    if (Error.captureStackTrace) { // required for non-V8 environments\n        Error.captureStackTrace(this);\n    }\n\n}\nRequestError.prototype = Object.create(Error.prototype);\nRequestError.prototype.constructor = RequestError;\n\n\nfunction StatusCodeError(statusCode, body, options, response) {\n\n    this.name = 'StatusCodeError';\n    this.statusCode = statusCode;\n    this.message = statusCode + ' - ' + (JSON && JSON.stringify ? JSON.stringify(body) : body);\n    this.error = body; // legacy attribute\n    this.options = options;\n    this.response = response;\n\n    if (Error.captureStackTrace) { // required for non-V8 environments\n        Error.captureStackTrace(this);\n    }\n\n}\nStatusCodeError.prototype = Object.create(Error.prototype);\nStatusCodeError.prototype.constructor = StatusCodeError;\n\n\nfunction TransformError(cause, options, response) {\n\n    this.name = 'TransformError';\n    this.message = String(cause);\n    this.cause = cause;\n    this.error = cause; // legacy attribute\n    this.options = options;\n    this.response = response;\n\n    if (Error.captureStackTrace) { // required for non-V8 environments\n        Error.captureStackTrace(this);\n    }\n\n}\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\n\n\nmodule.exports = {\n    RequestError: RequestError,\n    StatusCodeError: StatusCodeError,\n    TransformError: TransformError\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVxdWVzdC1wcm9taXNlLWNvcmUvbGliL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7O0FBR2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7O0FBRUEsbUNBQW1DO0FBQ25DO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTs7QUFFQSxtQ0FBbUM7QUFDbkM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBOztBQUVBLG1DQUFtQztBQUNuQztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2dsb3ZlbGwvZGV2L2dlbWluaS1zYWFzLXRlc3Qvbm9kZV9tb2R1bGVzL3JlcXVlc3QtcHJvbWlzZS1jb3JlL2xpYi9lcnJvcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5cbmZ1bmN0aW9uIFJlcXVlc3RFcnJvcihjYXVzZSwgb3B0aW9ucywgcmVzcG9uc2UpIHtcblxuICAgIHRoaXMubmFtZSA9ICdSZXF1ZXN0RXJyb3InO1xuICAgIHRoaXMubWVzc2FnZSA9IFN0cmluZyhjYXVzZSk7XG4gICAgdGhpcy5jYXVzZSA9IGNhdXNlO1xuICAgIHRoaXMuZXJyb3IgPSBjYXVzZTsgLy8gbGVnYWN5IGF0dHJpYnV0ZVxuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy5yZXNwb25zZSA9IHJlc3BvbnNlO1xuXG4gICAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7IC8vIHJlcXVpcmVkIGZvciBub24tVjggZW52aXJvbm1lbnRzXG4gICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMpO1xuICAgIH1cblxufVxuUmVxdWVzdEVycm9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRXJyb3IucHJvdG90eXBlKTtcblJlcXVlc3RFcnJvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBSZXF1ZXN0RXJyb3I7XG5cblxuZnVuY3Rpb24gU3RhdHVzQ29kZUVycm9yKHN0YXR1c0NvZGUsIGJvZHksIG9wdGlvbnMsIHJlc3BvbnNlKSB7XG5cbiAgICB0aGlzLm5hbWUgPSAnU3RhdHVzQ29kZUVycm9yJztcbiAgICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xuICAgIHRoaXMubWVzc2FnZSA9IHN0YXR1c0NvZGUgKyAnIC0gJyArIChKU09OICYmIEpTT04uc3RyaW5naWZ5ID8gSlNPTi5zdHJpbmdpZnkoYm9keSkgOiBib2R5KTtcbiAgICB0aGlzLmVycm9yID0gYm9keTsgLy8gbGVnYWN5IGF0dHJpYnV0ZVxuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy5yZXNwb25zZSA9IHJlc3BvbnNlO1xuXG4gICAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7IC8vIHJlcXVpcmVkIGZvciBub24tVjggZW52aXJvbm1lbnRzXG4gICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMpO1xuICAgIH1cblxufVxuU3RhdHVzQ29kZUVycm9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRXJyb3IucHJvdG90eXBlKTtcblN0YXR1c0NvZGVFcnJvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBTdGF0dXNDb2RlRXJyb3I7XG5cblxuZnVuY3Rpb24gVHJhbnNmb3JtRXJyb3IoY2F1c2UsIG9wdGlvbnMsIHJlc3BvbnNlKSB7XG5cbiAgICB0aGlzLm5hbWUgPSAnVHJhbnNmb3JtRXJyb3InO1xuICAgIHRoaXMubWVzc2FnZSA9IFN0cmluZyhjYXVzZSk7XG4gICAgdGhpcy5jYXVzZSA9IGNhdXNlO1xuICAgIHRoaXMuZXJyb3IgPSBjYXVzZTsgLy8gbGVnYWN5IGF0dHJpYnV0ZVxuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy5yZXNwb25zZSA9IHJlc3BvbnNlO1xuXG4gICAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7IC8vIHJlcXVpcmVkIGZvciBub24tVjggZW52aXJvbm1lbnRzXG4gICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMpO1xuICAgIH1cblxufVxuVHJhbnNmb3JtRXJyb3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFcnJvci5wcm90b3R5cGUpO1xuVHJhbnNmb3JtRXJyb3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gVHJhbnNmb3JtRXJyb3I7XG5cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgUmVxdWVzdEVycm9yOiBSZXF1ZXN0RXJyb3IsXG4gICAgU3RhdHVzQ29kZUVycm9yOiBTdGF0dXNDb2RlRXJyb3IsXG4gICAgVHJhbnNmb3JtRXJyb3I6IFRyYW5zZm9ybUVycm9yXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/request-promise-core/lib/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/request-promise-core/lib/plumbing.js":
/*!***********************************************************!*\
  !*** ./node_modules/request-promise-core/lib/plumbing.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar errors = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/request-promise-core/lib/errors.js\"),\n    isFunction = __webpack_require__(/*! lodash/isFunction */ \"(rsc)/./node_modules/lodash/isFunction.js\"),\n    isObjectLike = __webpack_require__(/*! lodash/isObjectLike */ \"(rsc)/./node_modules/lodash/isObjectLike.js\"),\n    isString = __webpack_require__(/*! lodash/isString */ \"(rsc)/./node_modules/lodash/isString.js\"),\n    isUndefined = __webpack_require__(/*! lodash/isUndefined */ \"(rsc)/./node_modules/lodash/isUndefined.js\");\n\n\nmodule.exports = function (options) {\n\n    var errorText = 'Please verify options'; // For better minification because this string is repeating\n\n    if (!isObjectLike(options)) {\n        throw new TypeError(errorText);\n    }\n\n    if (!isFunction(options.PromiseImpl)) {\n        throw new TypeError(errorText + '.PromiseImpl');\n    }\n\n    if (!isUndefined(options.constructorMixin) && !isFunction(options.constructorMixin)) {\n        throw new TypeError(errorText + '.PromiseImpl');\n    }\n\n    var PromiseImpl = options.PromiseImpl;\n    var constructorMixin = options.constructorMixin;\n\n\n    var plumbing = {};\n\n    plumbing.init = function (requestOptions) {\n\n        var self = this;\n\n        self._rp_promise = new PromiseImpl(function (resolve, reject) {\n            self._rp_resolve = resolve;\n            self._rp_reject = reject;\n            if (constructorMixin) {\n                constructorMixin.apply(self, arguments); // Using arguments since specific Promise libraries may pass additional parameters\n            }\n        });\n\n        self._rp_callbackOrig = requestOptions.callback;\n        requestOptions.callback = self.callback = function RP$callback(err, response, body) {\n            plumbing.callback.call(self, err, response, body);\n        };\n\n        if (isString(requestOptions.method)) {\n            requestOptions.method = requestOptions.method.toUpperCase();\n        }\n\n        requestOptions.transform = requestOptions.transform || plumbing.defaultTransformations[requestOptions.method];\n\n        self._rp_options = requestOptions;\n        self._rp_options.simple = requestOptions.simple !== false;\n        self._rp_options.resolveWithFullResponse = requestOptions.resolveWithFullResponse === true;\n        self._rp_options.transform2xxOnly = requestOptions.transform2xxOnly === true;\n\n    };\n\n    plumbing.defaultTransformations = {\n        HEAD: function (body, response, resolveWithFullResponse) {\n            return resolveWithFullResponse ? response : response.headers;\n        }\n    };\n\n    plumbing.callback = function (err, response, body) {\n\n        var self = this;\n\n        var origCallbackThrewException = false, thrownException = null;\n\n        if (isFunction(self._rp_callbackOrig)) {\n            try {\n                self._rp_callbackOrig.apply(self, arguments); // TODO: Apply to self mimics behavior of request@2. Is that also right for request@next?\n            } catch (e) {\n                origCallbackThrewException = true;\n                thrownException = e;\n            }\n        }\n\n        var is2xx = !err && /^2/.test('' + response.statusCode);\n\n        if (err) {\n\n            self._rp_reject(new errors.RequestError(err, self._rp_options, response));\n\n        } else if (self._rp_options.simple && !is2xx) {\n\n            if (isFunction(self._rp_options.transform) && self._rp_options.transform2xxOnly === false) {\n\n                (new PromiseImpl(function (resolve) {\n                    resolve(self._rp_options.transform(body, response, self._rp_options.resolveWithFullResponse)); // transform may return a Promise\n                }))\n                    .then(function (transformedResponse) {\n                        self._rp_reject(new errors.StatusCodeError(response.statusCode, body, self._rp_options, transformedResponse));\n                    })\n                    .catch(function (transformErr) {\n                        self._rp_reject(new errors.TransformError(transformErr, self._rp_options, response));\n                    });\n\n            } else {\n                self._rp_reject(new errors.StatusCodeError(response.statusCode, body, self._rp_options, response));\n            }\n\n        } else {\n\n            if (isFunction(self._rp_options.transform) && (is2xx || self._rp_options.transform2xxOnly === false)) {\n\n                (new PromiseImpl(function (resolve) {\n                    resolve(self._rp_options.transform(body, response, self._rp_options.resolveWithFullResponse)); // transform may return a Promise\n                }))\n                    .then(function (transformedResponse) {\n                        self._rp_resolve(transformedResponse);\n                    })\n                    .catch(function (transformErr) {\n                        self._rp_reject(new errors.TransformError(transformErr, self._rp_options, response));\n                    });\n\n            } else if (self._rp_options.resolveWithFullResponse) {\n                self._rp_resolve(response);\n            } else {\n                self._rp_resolve(body);\n            }\n\n        }\n\n        if (origCallbackThrewException) {\n            throw thrownException;\n        }\n\n    };\n\n    plumbing.exposePromiseMethod = function (exposeTo, bindTo, promisePropertyKey, methodToExpose, exposeAs) {\n\n        exposeAs = exposeAs || methodToExpose;\n\n        if (exposeAs in exposeTo) {\n            throw new Error('Unable to expose method \"' + exposeAs + '\"');\n        }\n\n        exposeTo[exposeAs] = function RP$exposed() {\n            var self = bindTo || this;\n            return self[promisePropertyKey][methodToExpose].apply(self[promisePropertyKey], arguments);\n        };\n\n    };\n\n    plumbing.exposePromise = function (exposeTo, bindTo, promisePropertyKey, exposeAs) {\n\n        exposeAs = exposeAs || 'promise';\n\n        if (exposeAs in exposeTo) {\n            throw new Error('Unable to expose method \"' + exposeAs + '\"');\n        }\n\n        exposeTo[exposeAs] = function RP$promise() {\n            var self = bindTo || this;\n            return self[promisePropertyKey];\n        };\n\n    };\n\n    return plumbing;\n\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/request-promise-core/lib/plumbing.js\n");

/***/ })

};
;