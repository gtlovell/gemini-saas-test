"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ultron";
exports.ids = ["vendor-chunks/ultron"];
exports.modules = {

/***/ "(rsc)/./node_modules/ultron/index.js":
/*!**************************************!*\
  !*** ./node_modules/ultron/index.js ***!
  \**************************************/
/***/ ((module) => {

eval("\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * An auto incrementing id which we can use to create \"unique\" Ultron instances\n * so we can track the event emitters that are added through the Ultron\n * interface.\n *\n * @type {Number}\n * @private\n */\nvar id = 0;\n\n/**\n * Ultron is high-intelligence robot. It gathers intelligence so it can start improving\n * upon his rudimentary design. It will learn from your EventEmitting patterns\n * and exterminate them.\n *\n * @constructor\n * @param {EventEmitter} ee EventEmitter instance we need to wrap.\n * @api public\n */\nfunction Ultron(ee) {\n  if (!(this instanceof Ultron)) return new Ultron(ee);\n\n  this.id = id++;\n  this.ee = ee;\n}\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.on = function on(event, fn, context) {\n  fn.__ultron = this.id;\n  this.ee.on(event, fn, context);\n\n  return this;\n};\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.once = function once(event, fn, context) {\n  fn.__ultron = this.id;\n  this.ee.once(event, fn, context);\n\n  return this;\n};\n\n/**\n * Remove the listeners we assigned for the given event.\n *\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.remove = function remove() {\n  var args = arguments\n    , ee = this.ee\n    , event;\n\n  //\n  // When no event names are provided we assume that we need to clear all the\n  // events that were assigned through us.\n  //\n  if (args.length === 1 && 'string' === typeof args[0]) {\n    args = args[0].split(/[, ]+/);\n  } else if (!args.length) {\n    if (ee.eventNames) {\n      args = ee.eventNames();\n    } else if (ee._events) {\n      args = [];\n\n      for (event in ee._events) {\n        if (has.call(ee._events, event)) args.push(event);\n      }\n\n      if (Object.getOwnPropertySymbols) {\n        args = args.concat(Object.getOwnPropertySymbols(ee._events));\n      }\n    }\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var listeners = ee.listeners(args[i]);\n\n    for (var j = 0; j < listeners.length; j++) {\n      event = listeners[j];\n\n      //\n      // Once listeners have a `listener` property that stores the real listener\n      // in the EventEmitter that ships with Node.js.\n      //\n      if (event.listener) {\n        if (event.listener.__ultron !== this.id) continue;\n      } else if (event.__ultron !== this.id) {\n        continue;\n      }\n\n      ee.removeListener(args[i], event);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Destroy the Ultron instance, remove all listeners and release all references.\n *\n * @returns {Boolean}\n * @api public\n */\nUltron.prototype.destroy = function destroy() {\n  if (!this.ee) return false;\n\n  this.remove();\n  this.ee = null;\n\n  return true;\n};\n\n//\n// Expose the module.\n//\nmodule.exports = Ultron;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvdWx0cm9uL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsY0FBYztBQUN6QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsU0FBUztBQUNwQixXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLE1BQU07QUFDTjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0IsaUJBQWlCO0FBQ25DOztBQUVBLG9CQUFvQixzQkFBc0I7QUFDMUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2dsb3ZlbGwvZGV2L2dlbWluaS1zYWFzLXRlc3Qvbm9kZV9tb2R1bGVzL3VsdHJvbi9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBoYXMgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIEFuIGF1dG8gaW5jcmVtZW50aW5nIGlkIHdoaWNoIHdlIGNhbiB1c2UgdG8gY3JlYXRlIFwidW5pcXVlXCIgVWx0cm9uIGluc3RhbmNlc1xuICogc28gd2UgY2FuIHRyYWNrIHRoZSBldmVudCBlbWl0dGVycyB0aGF0IGFyZSBhZGRlZCB0aHJvdWdoIHRoZSBVbHRyb25cbiAqIGludGVyZmFjZS5cbiAqXG4gKiBAdHlwZSB7TnVtYmVyfVxuICogQHByaXZhdGVcbiAqL1xudmFyIGlkID0gMDtcblxuLyoqXG4gKiBVbHRyb24gaXMgaGlnaC1pbnRlbGxpZ2VuY2Ugcm9ib3QuIEl0IGdhdGhlcnMgaW50ZWxsaWdlbmNlIHNvIGl0IGNhbiBzdGFydCBpbXByb3ZpbmdcbiAqIHVwb24gaGlzIHJ1ZGltZW50YXJ5IGRlc2lnbi4gSXQgd2lsbCBsZWFybiBmcm9tIHlvdXIgRXZlbnRFbWl0dGluZyBwYXR0ZXJuc1xuICogYW5kIGV4dGVybWluYXRlIHRoZW0uXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0V2ZW50RW1pdHRlcn0gZWUgRXZlbnRFbWl0dGVyIGluc3RhbmNlIHdlIG5lZWQgdG8gd3JhcC5cbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIFVsdHJvbihlZSkge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgVWx0cm9uKSkgcmV0dXJuIG5ldyBVbHRyb24oZWUpO1xuXG4gIHRoaXMuaWQgPSBpZCsrO1xuICB0aGlzLmVlID0gZWU7XG59XG5cbi8qKlxuICogUmVnaXN0ZXIgYSBuZXcgRXZlbnRMaXN0ZW5lciBmb3IgdGhlIGdpdmVuIGV2ZW50LlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudCBOYW1lIG9mIHRoZSBldmVudC5cbiAqIEBwYXJhbSB7RnVuY3Rvbn0gZm4gQ2FsbGJhY2sgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge01peGVkfSBjb250ZXh0IFRoZSBjb250ZXh0IG9mIHRoZSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIHtVbHRyb259XG4gKiBAYXBpIHB1YmxpY1xuICovXG5VbHRyb24ucHJvdG90eXBlLm9uID0gZnVuY3Rpb24gb24oZXZlbnQsIGZuLCBjb250ZXh0KSB7XG4gIGZuLl9fdWx0cm9uID0gdGhpcy5pZDtcbiAgdGhpcy5lZS5vbihldmVudCwgZm4sIGNvbnRleHQpO1xuXG4gIHJldHVybiB0aGlzO1xufTtcbi8qKlxuICogQWRkIGFuIEV2ZW50TGlzdGVuZXIgdGhhdCdzIG9ubHkgY2FsbGVkIG9uY2UuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50IE5hbWUgb2YgdGhlIGV2ZW50LlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gQ2FsbGJhY2sgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge01peGVkfSBjb250ZXh0IFRoZSBjb250ZXh0IG9mIHRoZSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIHtVbHRyb259XG4gKiBAYXBpIHB1YmxpY1xuICovXG5VbHRyb24ucHJvdG90eXBlLm9uY2UgPSBmdW5jdGlvbiBvbmNlKGV2ZW50LCBmbiwgY29udGV4dCkge1xuICBmbi5fX3VsdHJvbiA9IHRoaXMuaWQ7XG4gIHRoaXMuZWUub25jZShldmVudCwgZm4sIGNvbnRleHQpO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBSZW1vdmUgdGhlIGxpc3RlbmVycyB3ZSBhc3NpZ25lZCBmb3IgdGhlIGdpdmVuIGV2ZW50LlxuICpcbiAqIEByZXR1cm5zIHtVbHRyb259XG4gKiBAYXBpIHB1YmxpY1xuICovXG5VbHRyb24ucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgdmFyIGFyZ3MgPSBhcmd1bWVudHNcbiAgICAsIGVlID0gdGhpcy5lZVxuICAgICwgZXZlbnQ7XG5cbiAgLy9cbiAgLy8gV2hlbiBubyBldmVudCBuYW1lcyBhcmUgcHJvdmlkZWQgd2UgYXNzdW1lIHRoYXQgd2UgbmVlZCB0byBjbGVhciBhbGwgdGhlXG4gIC8vIGV2ZW50cyB0aGF0IHdlcmUgYXNzaWduZWQgdGhyb3VnaCB1cy5cbiAgLy9cbiAgaWYgKGFyZ3MubGVuZ3RoID09PSAxICYmICdzdHJpbmcnID09PSB0eXBlb2YgYXJnc1swXSkge1xuICAgIGFyZ3MgPSBhcmdzWzBdLnNwbGl0KC9bLCBdKy8pO1xuICB9IGVsc2UgaWYgKCFhcmdzLmxlbmd0aCkge1xuICAgIGlmIChlZS5ldmVudE5hbWVzKSB7XG4gICAgICBhcmdzID0gZWUuZXZlbnROYW1lcygpO1xuICAgIH0gZWxzZSBpZiAoZWUuX2V2ZW50cykge1xuICAgICAgYXJncyA9IFtdO1xuXG4gICAgICBmb3IgKGV2ZW50IGluIGVlLl9ldmVudHMpIHtcbiAgICAgICAgaWYgKGhhcy5jYWxsKGVlLl9ldmVudHMsIGV2ZW50KSkgYXJncy5wdXNoKGV2ZW50KTtcbiAgICAgIH1cblxuICAgICAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgICAgYXJncyA9IGFyZ3MuY29uY2F0KE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZWUuX2V2ZW50cykpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBsaXN0ZW5lcnMgPSBlZS5saXN0ZW5lcnMoYXJnc1tpXSk7XG5cbiAgICBmb3IgKHZhciBqID0gMDsgaiA8IGxpc3RlbmVycy5sZW5ndGg7IGorKykge1xuICAgICAgZXZlbnQgPSBsaXN0ZW5lcnNbal07XG5cbiAgICAgIC8vXG4gICAgICAvLyBPbmNlIGxpc3RlbmVycyBoYXZlIGEgYGxpc3RlbmVyYCBwcm9wZXJ0eSB0aGF0IHN0b3JlcyB0aGUgcmVhbCBsaXN0ZW5lclxuICAgICAgLy8gaW4gdGhlIEV2ZW50RW1pdHRlciB0aGF0IHNoaXBzIHdpdGggTm9kZS5qcy5cbiAgICAgIC8vXG4gICAgICBpZiAoZXZlbnQubGlzdGVuZXIpIHtcbiAgICAgICAgaWYgKGV2ZW50Lmxpc3RlbmVyLl9fdWx0cm9uICE9PSB0aGlzLmlkKSBjb250aW51ZTtcbiAgICAgIH0gZWxzZSBpZiAoZXZlbnQuX191bHRyb24gIT09IHRoaXMuaWQpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGVlLnJlbW92ZUxpc3RlbmVyKGFyZ3NbaV0sIGV2ZW50KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogRGVzdHJveSB0aGUgVWx0cm9uIGluc3RhbmNlLCByZW1vdmUgYWxsIGxpc3RlbmVycyBhbmQgcmVsZWFzZSBhbGwgcmVmZXJlbmNlcy5cbiAqXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cblVsdHJvbi5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uIGRlc3Ryb3koKSB7XG4gIGlmICghdGhpcy5lZSkgcmV0dXJuIGZhbHNlO1xuXG4gIHRoaXMucmVtb3ZlKCk7XG4gIHRoaXMuZWUgPSBudWxsO1xuXG4gIHJldHVybiB0cnVlO1xufTtcblxuLy9cbi8vIEV4cG9zZSB0aGUgbW9kdWxlLlxuLy9cbm1vZHVsZS5leHBvcnRzID0gVWx0cm9uO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/ultron/index.js\n");

/***/ })

};
;